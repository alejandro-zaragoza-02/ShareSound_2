<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Mi aplicación ASP.NET</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a href="@Url.Action("Index","Home")"><img src="@Url.Content("~/Images/LogoRe.png")" height="50" width="100" /></a>
            </div>
            <div class="navbar-collapse collapse">

                <form class="formulario" id="busqueda_form">
                    <div>
                        <input class="buscador" type="text" name="q" />
                        <select class="select" name="clases" id="select_busqueda">

                            @if (HttpContext.Current.Request.Url.AbsoluteUri.Equals("https://localhost:44332/Artista/Buscador/"))
                            {
                                <option value="artista" selected>Artista</option>
                            }
                            else
                            {
                                <option value="artista">Artista</option>
                            }

                            @if (HttpContext.Current.Request.Url.AbsoluteUri.Equals("https://localhost:44332/Cancion/Buscador/"))
                            {
                                <option value="cancion" selected>Cancion</option>
                            }
                            else
                            {
                                <option value="cancion">Cancion</option>
                            }

                            @if (HttpContext.Current.Request.Url.AbsoluteUri.Equals("https://localhost:44332/Album/Buscador/"))
                            {
                                <option value="album" selected>Album</option>
                            }
                            else
                            {
                                <option value="album">Album</option>
                            }

                            @if (HttpContext.Current.Request.Url.AbsoluteUri.Equals("https://localhost:44332/Playlist/Buscador/"))
                            {
                                <option value="playlist" selected>Playlist</option>
                            }
                            else
                            {
                                <option value="playlist">Playlist</option>
                            }
                        </select>
                        <button class="glyphicon glyphicon-search buscar"></button>
                    </div>
                </form>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="row">
        <nav class="col-lg-2 col-md-2">
            <a href="@Url.Action("Index","Home")" class="list-group-item ripple">Inicio</a>
            <a href="@Url.Action("Explorar_playlist","Playlist")" class="list-group-item ripple">Explorar playlists</a>
            <a href="@Url.Action("Explorar_album","Album")" class="list-group-item ripple">Explorar álbumes</a>
            <a href="@Url.Action("Index","Playlist")" class="list-group-item ripple">Mis playlists</a>
            <a href="@Url.Action("Index","Album")" class="list-group-item ripple">Mis albumes</a>
            <a href="@Url.Action("Seguidas","Playlist")" class="list-group-item ripple">Playlists seguidas</a>
            <a href="@Url.Action("Seguidos","Album")" class="list-group-item ripple">Albumes seguidos</a>
            <a href="@Url.Action("Liked","Cancion")" class="list-group-item ripple">Canciones que te gustan</a>
        </nav>
        <div class="container body-content col-lg-10 col-md-10">
            @RenderBody()
            <hr />
            <div class="reproductor row">
                <div id="songName" class="col-lg-3"><p class="margin">Prueba</p></div>
                <div class="repro col-lg-6">
                    <div class="repro_btn">
                        <button id="cancion_atras" type="button" class="btn btn-primary" onclick="previusBtn()"><span class="glyphicon glyphicon-fast-backward"></span></button>
                        <button id="cancion_reanudar" type="button" class="btn btn-primary" onclick="playBtn()"><span class="glyphicon glyphicon-play"></span></button>
                        <button id="cancion_pausar" type="button" class="btn btn-primary" onclick="pauseBtn()" style="display: none;"><span class="glyphicon glyphicon-pause"></span></button>
                        <button id="cancion_siguiente" type="button" class="btn btn-primary" onclick="nextBtn()"><span class="glyphicon glyphicon-fast-forward"></span></button>
                    </div>
                    <div class="repro_inp">
                        <span id="durIni">0</span>
                        <input id="repro_range" type="range" min="0" max="100" step="1" value="0" disabled />
                        <span id="durFin">0</span>
                    </div>
                </div>
                <div class="col-lg-3 repro_vol">
                    <div class="volDiv">
                        <span class="btn btn-primary glyphicon glyphicon-volume-up"></span>
                        <input id="repro_vol" type="range" min="0" max="100" step="1" value="100" oninput="changeVolume(event)" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>

        let nextSong = [];
        let previusSong = [];
        let intervalSong = -1;

        function playBtn() {
            if (sessionStorage['songId'] && sessionStorage['songDur'] && sessionStorage['songSec']) {
                document.getElementById('cancion_reanudar').style.display = 'none';
                document.getElementById('cancion_pausar').style.display = 'inline';
                document.getElementById('song_' + sessionStorage['songId']).play();
                let sec = sessionStorage['songSec'];
                intervalSong = setInterval(function () {
                    sec++;
                    document.getElementById('repro_range').value = sec;
                    document.getElementById('durIni').textContent = sec;
                    if (sec >= sessionStorage['songDur']) {
                        clearInterval(intervalSong);
                    }
                }, 1000);
            }
        }

        function reproducirMain() {
            document.querySelector('.btn-play:first-of-type').click();
        }

        function setLike(id, likes, evt) {
            evt.target.parentElement.innerHTML = parseInt(likes + 1) + ' <span class="glyphicon glyphicon-heart pointer" onclick="removeLike(' + id + ', ' + parseInt(likes + 1) + ', event)"></span>';
            fetch('/Cancion/Like?id=' + id)
                .then(response => response.text())
                .then(data => { });
        }

        function removeLike(id, likes, evt) {
            evt.target.parentElement.innerHTML = parseInt(likes - 1) + ' <span class="glyphicon glyphicon-heart-empty pointer" onclick="setLike(' + id + ', ' + parseInt(likes - 1) + ', event)"></span>';
            fetch('/Cancion/UnLike?id=' + id)
                .then(response => response.text())
                .then(data => { });
        }

        function addPlaylist(play_id, song_id) {
            fetch('/Playlist/Add?play_id=' + play_id + '&song_id=' + song_id)
                .then(response => response.text())
                .then(data => {
                    if (data.toLowerCase() == "true") {
                        alert("Canción agregada correctamente a la playlist seleccionada!");
                    } else {
                        alert("La canción no se pudo agregar porque ya está añadida.");
                    }
                });
        }

        function removePlaylist(play_id, song_id) {
            fetch('/Playlist/Remove?play_id=' + play_id + '&song_id=' + song_id)
                .then(response => response.text())
                .then(data => {
                    if (data) {
                        alert("Canción agregada correctamente a la playlist seleccionada!");
                    } else {
                        alert("La canción no se pudo agregar porque ya está añadida.");
                    }
                });
        }

        function changeVolume(evt) {
            localStorage['songVol'] = evt.target.value / 100;
            document.getElementById('song_' + sessionStorage['songId']).volume = localStorage['songVol'];
        }

        function nextBtn() {
            clearInterval(intervalSong);
            if (nextSong && nextSong.length == 2) {
                playBtnList(nextSong[0], nextSong[1]);
            }
        }

        function previusBtn() {
            clearInterval(intervalSong);
            if (previusSong && previusSong.length == 2) {
                playBtnList(previusSong[0], previusSong[1]);
            }
        }

        function pauseBtn() {
            sessionStorage['songSec'] = document.getElementById('durIni').textContent;
            document.getElementById('cancion_pausar').style.display = 'none';
            document.getElementById('cancion_reanudar').style.display = 'inline';
            if (sessionStorage['songId']) {
                document.getElementById('song_' + sessionStorage['songId']).pause();
                clearInterval(intervalSong);
            }
        }

        function playBtnList(id, dur) {
            fetch('/Cancion/getView?id=' + id)
                .then(response => response.text())
                .then(data => {
                    document.getElementById('views_' + id).textContent = parseInt(document.getElementById('views_' + id).textContent) + 1;
                });
            clearInterval(intervalSong);
            document.querySelector('.reproductor').style.maxHeight = '10vh';
            sessionStorage['songId'] = id;
            sessionStorage['songDur'] = dur;
            sessionStorage['songName'] = document.getElementById('song_' + id).getAttribute('songTitle');
            document.getElementById('cancion_reanudar').style.display = 'none';
            document.getElementById('cancion_pausar').style.display = 'inline';
            let found = false;
            let found2 = false;
            nextSong = [];
            previusSong = [];
            document.querySelectorAll('audio').forEach(audio => {
                if (audio.played) {
                    audio.pause();
                    audio.currentTime = 0;
                }
                if (found) {
                    nextSong[0] = audio.id.replace("song_", "");
                    nextSong[1] = audio.getAttribute('dur');
                    found = false;
                }
                if (audio.id == 'song_' + id) {
                    found = true;
                    found2 = true;
                    document.getElementById('play_' + audio.id.replace("song_", "")).disabled = true;
                } else {
                    document.getElementById('play_' + audio.id.replace("song_", "")).disabled = false;
                }
                if (!found2) {
                    previusSong[0] = audio.id.replace("song_", "");
                    previusSong[1] = audio.getAttribute('dur');
                }
            })
            if (nextSong.length != 2) {
                document.getElementById('cancion_siguiente').disabled = true;
            } else {
                document.getElementById('cancion_siguiente').disabled = false;
            }
            if (previusSong.length != 2) {
                document.getElementById('cancion_atras').disabled = true;
            } else {
                document.getElementById('cancion_atras').disabled = false;
            }
            document.getElementById('songName').innerHTML = '<p class="margin">' + sessionStorage['songName'] + '</p>';
            document.getElementById('durIni').textContent = 0;
            document.getElementById('repro_range').value = 0;
            document.getElementById('repro_range').max = dur;
            document.getElementById('durFin').textContent = dur;
            document.getElementById('song_' + id).volume = localStorage['songVol'];
            document.getElementById('song_' + id).play();
            let sec = 0;
            intervalSong = setInterval(function () {
                sec++;
                document.getElementById('repro_range').value = sec;
                document.getElementById('durIni').textContent = sec;
                if (sec >= dur) {
                    nextBtn();
                }
            }, 1000);
        }

        function compartir() {
            navigator.clipboard.writeText(location.href).then(() => {
                alert('La dirección se ha copiado correctamente en el portapapeles.')
            }).catch(err => {
                alert('No se ha podido copiar el link');
            });
        }

        function getTime(sec) {
            let minutos = Math.floor(sec / 60);
            let segundosRestantes = sec % 60;
            return minutos + ":" + (segundosRestantes < 10 ? "0" + segundosRestantes : segundosRestantes);
        }


        document.getElementById("busqueda_form").onsubmit = function (e) {
            e.preventDefault();
            let fd = new FormData(e.target);
            switch (fd.get("clases")) {
                case "artista":
                    location.href = 'https://localhost:44332/Usuario/Buscador/' + fd.get("q");
                    break;
                case "cancion":
                    location.href = 'https://localhost:44332/Cancion/Buscador/' + fd.get("q");
                    break;
                case "album":
                    location.href = 'https://localhost:44332/Album/Buscador/' + fd.get("q");
                    break;
                case "playlist":
                    location.href = 'https://localhost:44332/Playlist/Buscador/' + fd.get("q");
                    break;
            }
        }
    </script>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>
